// IMPORTANT: This file was auto-generated by the morebec/spectool program. Do not edit manually.

package user

// httpUserCreateOne Allows creating a user
func httpUserCreateOne(r chi.Router, bus command.Bus) {
	r.Get("/user/create", func(w http.ResponseWriter, r *http.Request) {
		handleError := func(w http.ResponseWriter, r *http.Request, err error) {
			if !domain.IsDomainError(err) {
				w.WriteHeader(500)
				render.JSON(w, r, NewInternalError(err))
			}

			derr := err.(domain.Error)

			conv := map[domain.ErrorTypeName]int{
				// Returned when a user was not found.
				"user_not_found": 404,
			}
			c := conv[derr.TypeName()]
			w.WriteHeader(c)
			render.JSON(w, r, NewErrorResponse(derr.TypeName(), derr.Error(), derr.Data()))
		}

		// Decode request payload
		var input HttpUserCreateRequest
		err := json.NewDecoder(r.Body).Decode(&input)
		if err != nil {
			w.WriteHeader(500)
			render.JSON(w, r, httpapi.NewInternalError(err))
			return
		}

		// Send to Domain Layer
		output, err := bus.Send(r.Context(), input)
		if err != nil {
			w.WriteHeader(400)
			render.JSON(w, r, httpapi.NewErrorResponse(output))
			return
		}

		render.JSON(w, r, httpapi.NewSuccessResponse(output))
	})
}

const HttpUserCreateRequestTypeName string = "http.user.create.request"

// HttpUserCreateRequest request of http.user.create endpoint
type HttpUserCreateRequest struct {

	// description
	BaseURL *string `json:"baseUrl"`
}

func (c HttpUserCreateRequest) TypeName() string {
	return HttpUserCreateRequestTypeName
}
